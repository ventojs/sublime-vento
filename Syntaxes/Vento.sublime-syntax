%YAML 1.2
---
# See http://www.sublimetext.com/docs/syntax.html
name: Plain text (Vento)
scope: text.plain.vento
version: 2
extends: Packages/JavaScript/JavaScript.sublime-syntax
extensions: [txt.vto]

contexts:
  main:
  - include: comment
  - include: tag_js_code
  - include: tag

  comment:
  - match: '{{#-?'
    scope: >
      comment.block.vento
      punctuation.definition.comment.begin.vento
    push:
    - match: '-?#}}'
      scope: >
        comment.block.vento
        punctuation.definition.comment.end.vento
      pop: true
    - match: '(?:[^-#]+|-(?!#}})|#(?!}}))'
      scope: comment.block.vento

  tag_js_code:
  - match: '{{>'
    scope: punctuation.definition.code.begin.vento
    push:
    - match: '-?}}'
      scope: punctuation.definition.code.end.vento
      pop: true
    - include: scope:source.js-in-vento

  tag:
  - match: '{{-?'
    scope: punctuation.definition.tag.begin.vento
    push:
    - match: '\s+'
    - include: tag_echo
    - include: tag_export
    - include: tag_for
    - include: tag_function
    - include: tag_if
    - include: tag_import
    - include: tag_include
    - include: tag_layout
    - include: tag_set
    - include: tag_unknown
    - include: tag_interpolation

  tag_echo:
  - match: '\becho\b'
    scope: keyword.declaration.echo.begin.vento
    push:
    - match: '(?!\s*\|>|\s*-?}})'
      push:
      - match: '-?}}'
        scope: punctuation.definition.tag.end.vento
        pop: 3
      - include: scope:source.js-expression-in-vento
    - match: ''
      push:
      - match: '-?}}'
        scope: punctuation.definition.tag.end.vento
        push:
        - match: '({{-?)\s*((/)echo)\s*(-?}})'
          captures:
            1: punctuation.definition.tag.begin.vento
            2: keyword.declaration.echo.end.vento
            3: punctuation.section.tag.end.vento
            4: punctuation.definition.tag.end.vento
          pop: 4
      - include: tag_opening_end_pipeable

  tag_export:
  - match: '\bexport\b'
    scope: keyword.control.export.begin.vento
    push: tag_opening_end_pipeable
  - match: '(/)export\b'
    captures:
      0: keyword.control.export.end.vento
      1: punctuation.section.tag.end.vento
    push: tag_closing_end

  tag_for:
  - match: '\bfor\b'
    scope: keyword.control.loop.for.begin.vento
    push:
    - match: 'of'
      scope: keyword.operator.word
    - include: tag_opening_end
  - match: '(/)for\b'
    captures:
      0: keyword.control.loop.for.end.vento
      1: punctuation.section.tag.end.vento
    push:
    - include: tag_closing_end

  tag_function:
  - match: '(?=(?:async\s+)?function\b)'
    push: tag_opening_end
  - match: '(/)function\b'
    captures:
      0: keyword.declaration.function.end.vento
      1: punctuation.section.tag.end.vento
    push: tag_closing_end

  tag_if:
  - match: '\bif\b'
    scope: keyword.control.conditional.if.begin.vento
    push: tag_opening_end
  - match: 'else\s+if\b'
    scope: keyword.control.conditional.elseif.vento
    push: tag_opening_end
  - match: '\belse\b'
    scope: keyword.control.conditional.else.vento
    push: tag_opening_end
  - match: '(/)if\b'
    captures:
      0: keyword.control.conditional.if.end.vento
      1: punctuation.section.tag.end.vento
    push: tag_closing_end

  tag_import:
  - match: '(?=\bimport\b)'
    push:
    - match: '-?}}'
      scope: punctuation.definition.tag.end.vento
      pop: 2
    - match: ''
      push:
      - meta_scope: source.js.embedded.vento
      - match: ''
        push:
        - include: scope:source.js#import-statement
        - match: ''
          pop: 2

  tag_include:
  - match: '\binclude\b'
    scope: keyword.control.include.vento
    push: tag_opening_end_pipeable

  tag_layout:
  - match: '\blayout\b'
    scope: keyword.control.layout.begin.vento
    push: tag_opening_end_pipeable
  - match: '(/)layout\b'
    captures:
      0: keyword.control.layout.end.vento
      1: punctuation.section.tag.end.vento
    push: tag_closing_end

  tag_set:
  - match: '\bset\b'
    scope: keyword.declaration.set.begin.vento
    push: tag_opening_end_pipeable
  - match: '(/)set\b'
    captures:
      0: keyword.declaration.set.end.vento
      1: punctuation.section.tag.end.vento
    push: tag_closing_end

  tag_unknown:
  - match: '\b(?!await\b)\w+\b(?=\s+[\w''"`\[{])'
    scope: keyword.control.unknown.begin.vento
    push: tag_opening_end_pipeable
  - match: '(/)\w+\b'
    captures:
      0: keyword.control.unknown.end.vento
      1: punctuation.section.tag.end.vento
    push: tag_closing_end

  tag_interpolation:
  - match: ''
    push: tag_opening_end_pipeable

  # Some helpers to avoid excessive repetition

  tag_opening_end:
  - match: '-?}}'
    scope: punctuation.definition.tag.end.vento
    pop: 2
  - include: scope:source.js-expression-in-vento

  tag_opening_end_pipeable:
  - match: '\|>'
    scope: keyword.operator.pipe.vento
  - include: tag_opening_end

  tag_closing_end:
  - match: '-?}}'
    scope: punctuation.definition.tag.end.vento
    pop: 2
  - match: '\s+'
  - match: '\S'
    scope: invalid.illegal.garbage.vento
    pop: 2
